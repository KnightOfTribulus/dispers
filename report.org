#+LANGUAGE: ru
#+LATEX_HEADER: \usepackage[russian]{babel}
#+TITLE: Отчет по домашнему заданию на 22 апреля по дисциплине "Диагностика сложных систем" 
#+AUTHOR: Выполнил: студент группы 381607-2 Кузьмин Александр
#+OPTIONS: toc:nil
#+OPTIONS: num:nil

#+BEGIN_LATEX
\pagebreak
#+END_LATEX

* Введение
  
* Контрольный вопрос 1
** Решение:
   Для произведения автоматизированных проверочных рассчетов эмпирического корреляционного отношения данных, приведенных в таблице, был реализован набор функций и переменных на языке программирования общего назначения ANSI Common Lisp. В данном и всех последующих примерах функции, автоматизирующие рассчеты вызывались в интерактивном режиме через Read-Eval-Print Loop, предоставленный используемой реализацией языка ANSI Common Lisp (DISPERS - выбранное наименование пакета функций и переменных, реализованных в процессе выполнения работы).
*** Рассчет внутригрупповой дисперсии $\sigma^2,\sigma^2$:
    #+BEGIN_SRC lisp
    DISPERS> (group-dispersion *group-1*)
    5/3
    DISPERS> (group-dispersion *group-2*)
    14/3
    DISPERS> 
    #+END_SRC
    Как можно заметить, язык ANSI Common Lisp поддерживает символьные вычисления по умолчанию, однако полученные результаты соответствуют результатам, приведенным в тексте *Контрольного вопроса 1*.
*** Рассчет межгрупповой дисперсии $\delta^2$:
    #+BEGIN_SRC lisp
    CL-USER> (in-package :dispers)
    #<PACKAGE "DISPERS">
    DISPERS> (inter-dispersion *group-1* *group-2*)
    9
    DISPERS> 
    #+END_SRC
    В ходе проверки рассчетов было получено значение межгрупповой дисперсии, совпадаюещее с соответсвующим значением, в тексте *Контрольного вопроса 1*.
*** Рассчет общей дисперсии $\sigma^2$:
    #+BEGIN_SRC lisp
    DISPERS> (overall-dispersion *group-1* *group-2*)
    73/6
    DISPERS> (float *)
    12.166667
    DISPERS> 
    #+END_SRC
    В ходе проверки рассчетов, было получено значение $\frac{73}{6}$, что при приведении к чилу с плавающей точкой приближенно соответствует значению, указанному в тексте *Контрольного вопроса 1*.
*** Рассчет показателя тесноты связи h:
    #+BEGIN_SRC lisp
    DISPERS> (correlation-factor *group-1* *group-2*)
    0.86007327
    DISPERS> 
    #+END_SRC
    В ходе проверки рассчетов, было получено значение показателя тесноты связи h соответствующее значению, указанному в тексте *Контрольного вопроса 1*.

* Контрольный вопрос 2
  Для приведенного примера построить точечные диаграммы на полях рассеяния и новые ряды данных при разных относительных сдвигах векторов X и Y, показать, что наивысшая корреляция достигается при временном лаге в 2 месяца.
** Решение
   Для автоматизации рассчетов корреляции, и построения точечных диаграмм был реализован набор функций и переменных на языке программирования общего назначения ANSI Common Lisp, построения точечных диаграмм были реализованны функции с использованием интерфейса свободной утилиты Gnuplot.
*** Задание рядов данных:
   #+BEGIN_SRC lisp
   (defparameter *x* 
      '(105 102 100 106 112 115 118 116 120 125 125 128)
      "число жалоб(Х)")
   (defparameter *y* 
      '(68 71 69 66 65 70 75 76 78 77 79 82)
      "затраты на ремонт (Y)")
    #+END_SRC
*** Построение точечной диаграммы без временного лага:
    Далее представлены результаты преобразования структур данных и команд на языке ANSI Common Lisp в структуры данных и команды, принимаемые утилитой Gnuplot. В хдоде автоматизации рассчетов было принято решение о выводе данных результатов на экран для проверки корректности производимого преобразования.
   #+BEGIN_SRC lisp
   DISPERS> (plot-correl)
   " set terminal pngcairo 
   set output \"correl.png\" 
   unset key 
   set size ratio 1 
   set title \"r= 0.822464, lag 0\" 
   plot '-' with points linestyle 7
   105 68
   102 71
   100 69
   106 66
   112 65
   115 70
   118 75
   116 76
   120 78
   125 77
   125 79
   128 82
   end


   set output" 
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
   DISPERS> 
   #+END_SRC    
   Данная функция производит файл "correl.png", который содержит следующую диаграмму:
   [[file:~/quicklisp/local-projects/dispers/correl.png]]
*** Построение точечной диаграммы с временным лагом 2:
    #+BEGIN_SRC lisp
    DISPERS> (plot-correl :lag 2)

    " set terminal pngcairo 
    set output \"correl.png\" 
    unset key 
    set size ratio 1 
    set title \"r= 0.99419034, lag 2\" 
    plot '-' with points linestyle 7
    105 69
    102 66
    100 65
    106 70
    112 75
    115 76
    118 78
    116 77
    120 79
    125 82
    end
    
    
    set output" 
    (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
    DISPERS> 
    #+end_src
    Данная функция может быть вызвана с любым допустимым занчением аргумента :lag. Далее представлен результат выполнения данной функции, точечная диаграмма "correl.png" для временного лага 2:
    [[file:~/quicklisp/local-projects/dispers/correl2.png]]
    Анализируя данную диаграмму, можно заметить, что корреляция при временном лаге 2 является наибольшей.
    Далее это предположение поддтверждается путем автоматизированных рассчетов:
    #+BEGIN_SRC lisp
    DISPERS> (mapcar (lambda (lag) (correl *x* *y* :lag lag))
		 (list 0 1 2 3 4 5 6 7))
    (0.822464 0.917843 0.99419034 0.8777492 0.68547 0.6807803 0.7471421 0.80569625)
    DISPERS> (apply #'max *)
    0.99419034
    DISPERS>
    #+end_src
* Контрольный вопрос 3
  Построить самостоятельно линию регрессии на точечной диаграмме с отображением уравнения регрессии и показателя детерминации для данных, приведенных в таблице:
** Решение
   Для автоматизации рассчетов линейной регрессии, и построения точечных диаграмм был реализован набор функций и переменных на языке программирования общего назначения ANSI Common Lisp, построения точечных диаграмм были реализованны функции с использованием интерфейса свободной утилиты Gnuplot.
*** Здание рядов данных:
    #+BEGIN_SRC lisp
    (defparameter *distance* 
        '(3.5 2.4 4.9 4.2 3 1.3 1 3 1.5 4.1)
        "расстояние, км")
    (defparameter *time* 
        '(16 13 19 18 12 11 8 14 9 16)
        "время, мин")
    #+END_SRC
*** Построение диаграммы линейной регрессии:
    Далее представлен результат преобразования структур данных и команд на языке ANSI Common Lisp в структуры данных и команды, принимаемые утилитой Gnuplot.
    #+BEGIN_SRC lisp
    DISPERS> (plot-regression)

    warning: FUNC-PLOT is deprecated. Use the PLOT function with a string.

    " set terminal pngcairo 
    set output \"regression.png\" 
    unset key 
    set xlabel \"x\" 
    set ylabel \"y\" 
    set size ratio 1 
    set title \"r= 0.9582756, y=2.6597013x+5.913464\" 
    plot '-' with points linestyle 7, 2.6597013 * x + 5.913464
    3.5 16
    2.4 13
    4.9 19
    4.2 18
    3 12
    1.3 11
    1 8
    3 14
    1.5 9
    4.1 16
    end
    
    
    
    set output" 
    NIL
    DISPERS> 
    #+END_SRC
   Данная функция производит файл "regression.png", который содержит следующую диаграмму:
   [[file:~/quicklisp/local-projects/dispers/regression.png]]
* Контрольный вопрос 4
  
